{"version":3,"sources":["routing-jump/signin/login.jsx","routing-jump/register/register.jsx","routing-jump/home/index.jsx","home.jsx","serviceWorker.js","index.js"],"names":["Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","_ref","target","setState","defineProperty","name","value","onSubmit","nouser","message","duration","usern","passn","_this$state","state","username","password","trim","Axios","get","then","res","login","console","log","userInfo","notification","open","props","getstatus","_objectSpread","data","typename","JSON","parse","sessionStorage","getItem","user","_this$state2","_react_16_9_0_react_default","a","createElement","input","prefix","icon","type","style","color","onChange","placeholder","es_button","onClick","Component","Index","checked","verif","treaty","repassword","length","description","test","onRegister","args2","axios","status","setItem","stringify","register_objectSpread","_React$createElement","_React$createElement2","_this$state3","className","autoComplete","href","child","handleSubmit","e","preventDefault","newCheckbox","toConsumableArray","checkbox","clicked","str","more","join","siggle","alert","onSigle","stopPropagation","currentTarget","innerText","onMore","children","arr","Array","isArray","i","indexOf","push","unique","concat","filter","item","radio","isDom","Dom","register_register","signin_login","home_child","Boolean","window","location","hostname","match","ReactDOM","render","home","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gjBAuGeA,cAlGX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAQJI,aAAe,SAAAC,GAAgB,IAAbC,EAAaD,EAAbC,OACdT,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACKQ,EAAOG,KAAOH,EAAOI,SAXhBb,EAedc,SAAW,WACP,IAQMC,EAAS,CACXC,QAAS,2EACTC,SAAU,GAERC,EAAQ,CACVF,QAAS,iCACTC,SAAU,GAERE,EAAQ,CACVH,QAAS,2BACTC,SAAU,GAnBDG,EAqBkBpB,EAAKqB,MAA5BC,EArBKF,EAqBLE,SAAUC,EArBLH,EAqBKG,SAElB,OAAKD,EAASE,OAEFD,EAASC,YAIrBC,IAAMC,IAAI,qBAAsB,CAC5BJ,WACAC,aACDI,KAAK,SAAAC,GACJ,IAAMC,EAAQ,CAAEP,WAAUC,YAC1BO,QAAQC,IAAIF,GACZ,IAAMG,EAAWhC,EAAKgC,SACtBF,QAAQC,IAAIC,GACPA,EAEMA,EAASV,WAAaO,EAAMP,SACnCW,IAAaC,KAAKhB,GACXc,EAAST,WAAaM,EAAMN,SACnCU,IAAaC,KAAKf,GAElBnB,EAAKmC,MAAMC,+VAAXC,CAAA,GAA0BT,EAAIU,KAA9B,CAAoCC,SAAU,UAN9CN,IAAaC,KAAKnB,GAQtBe,QAAQC,IAAI,kBApBLE,IAAaC,KArBX,CACTlB,QAAS,uCACTC,SAAU,IAiBHgB,IAAaC,KAvBX,CACTlB,QAAS,6CACTC,SAAU,KAhBdjB,EAAKgC,SAAWQ,KAAKC,MAAMC,eAAeC,QAAQ,iBAClD3C,EAAKqB,MAAQ,CACTC,SAAWtB,EAAK4C,MAAQ5C,EAAK4C,KAAKtB,UAAa,GAC/CC,SAAU,IALJvB,wEAgEL,IAAA6C,EAC0B1C,KAAKkB,MAA5BC,EADHuB,EACGvB,SAAUC,EADbsB,EACatB,SAClB,OACIuB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,OAAQJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CF,KAAK,OACLxC,KAAK,WACLC,MAAOS,EACPiC,SAAUpD,KAAKI,aACfiD,YAAY,wBAGpBV,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,OAAQJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CF,KAAK,WACLvC,MAAOU,EACPX,KAAK,WACL2C,SAAUpD,KAAKI,aACfiD,YAAY,kBAGpBV,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQL,KAAK,SAASM,QAASvD,KAAKW,UAApC,yBA1FA6C,oPC8ILC,cA1IX,SAAAA,IAAa,IAAA5D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,IACT5D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2D,GAAAtD,KAAAH,QAQJI,aAAe,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,OACbT,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACKQ,EAAOG,KAAsB,WAAhBH,EAAOG,KAAoBH,EAAOoD,QAAUpD,EAAOI,SAX5Db,EAcb8D,MAAQ,WACJ,IADQ1C,EAyBsCpB,EAAKqB,MAA5CC,EAzBCF,EAyBDE,SAASC,EAzBRH,EAyBQG,SAASwC,EAzBjB3C,EAyBiB2C,OAAOC,EAzBxB5C,EAyBwB4C,WAChC,OAAI1C,EAASE,QAAUF,EAAS2C,OAAS,EAC9BhC,IAAaC,KA1BX,CACTlB,QAAS,2BACTkD,YACE,mGACFjD,SAAU,IAuBJM,EAASC,QAAW,eAAe2C,KAAK5C,GAEvCA,IAAayC,EACb/B,IAAaC,KAlBV,CACVlB,QAAS,2BACTkD,YACE,iFACFjD,SAAU,MAeJ8C,GACC9B,IAAaC,KAdV,CACVlB,QAAS,2BACTkD,YACE,iCACFjD,SAAU,IAMHgB,IAAaC,KAtBV,CACVlB,QAAS,2BACTkD,YACE,qIACFjD,SAAU,KAzBLjB,EAmDboE,WAAa,WACT,IAkBMC,EAAQ,CACVrD,QAAS,eACTkD,YACE,mDACFjD,SAAU,GAEd,GAAIjB,EAAK8D,QACL,OAAO7B,IAAaC,KAbV,CACVlB,QAAS,eACTkD,YACE,2BACFjD,SAAU,IAjBC,IAAA4B,EAmCa7C,EAAKqB,MAA1BC,EAnCQuB,EAmCRvB,SAASC,EAnCDsB,EAmCCtB,SAChB,OAAID,EAASE,OAEHD,EAASC,YAKnB8C,IAAM5C,IAAI,qBAAqB,CAACJ,WAASC,aAAWI,KAAK,SAACC,GACtD,GAAkB,MAAfA,EAAI2C,OAMH,OAAOtC,IAAaC,KAAKmC,GAJzB3B,eAAe8B,QAAQ,eAAehC,KAAKiC,UAAUnD,EAASC,IAE9DvB,EAAKmC,MAAMC,+VAAXsC,CAAA,GAAyB9C,EAAIU,KAA7B,CAAkCC,SAAS,aATxCN,IAAaC,KAhCV,CACVlB,QAAS,2BACTkD,YACE,qIACFjD,SAAU,IA0BHgB,IAAaC,KApCX,CACTlB,QAAS,2BACTkD,YACE,mGACFjD,SAAU,KAtDdjB,EAAKqB,MAAQ,CACTC,SAAS,GACTC,SAAS,GACTyC,WAAW,GACXD,QAAO,GANF/D,wEAgHJ,IAAA2E,EAAAC,EAAAC,EACyC1E,KAAKkB,MAA5CC,EADFuD,EACEvD,SAASC,EADXsD,EACWtD,SAASwC,EADpBc,EACoBd,OAAOC,EAD3Ba,EAC2Bb,WAChC,OACIlB,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,SACXhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOG,KAAK,OAAOxC,KAAK,WAAWC,MAAOS,EAAUiC,SAAUpD,KAAKI,aAAciD,YAAY,qBAAMuB,aAAa,MAAM7B,OAAQJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,uBAChKR,EAAAC,EAAAC,cAACC,EAAA,GAAD0B,EAAA,CAAOvB,KAAK,WAAWxC,KAAK,WAAWC,MAAOU,EAAUgC,SAAUpD,KAAKI,aAAciD,YAAY,eAAKuB,aAAa,MAAM7B,OAAQJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,sBAAnKrD,OAAAU,EAAA,EAAAV,CAAA0E,EAAA,OAAiM,YAAjM1E,OAAAU,EAAA,EAAAV,CAAA0E,EAAA,cAAwN,YAAxNA,IACA7B,EAAAC,EAAAC,cAACC,EAAA,GAAD2B,EAAA,CAAOxB,KAAK,aAAaxC,KAAK,aAAaC,MAAOmD,EAAYT,SAAUpD,KAAKI,aAAciD,YAAY,2BAAOuB,aAAa,MAAM7B,OAAQJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,sBAA3KrD,OAAAU,EAAA,EAAAV,CAAA2E,EAAA,OAAyM,cAAzM3E,OAAAU,EAAA,EAAAV,CAAA2E,EAAA,cAAkO,cAAlOA,IACA9B,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,cAMfhC,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQC,QAASvD,KAAKiE,WAAYhB,KAAK,SAAS0B,UAAU,qBAA1D,WAGAhC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWS,QAASE,EAAQlD,MAAM,WAAWD,KAAK,SAAS2C,SAAUpD,KAAKI,eAD1F,2BAGIuC,EAAAC,EAAAC,cAAA,KAAGgC,KAAK,mBAAmBvE,OAAO,UAAlC,yBApIAkD,qBCJCsB,sBACjB,SAAAA,IAAa,IAAAjF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8E,IACTjF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgF,GAAA3E,KAAAH,QAQJ+E,aAAe,SAAAC,GACQA,EAAX1E,OACR0E,EAAEC,kBAXOpF,EAabO,aAAe,SAAAC,GAAc,IAAZC,EAAYD,EAAZC,OACb,GAAmB,aAAhBA,EAAOG,KAAoB,CAC1B,IAAMyE,EAAWpF,OAAAqF,EAAA,EAAArF,CAAOD,EAAKqB,MAAMkE,UACnCF,EAAY5E,EAAOI,OAASJ,EAAOoD,QACnC7D,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACKQ,EAAOG,KAAMyE,SAGlBrF,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACKQ,EAAOG,KAAMH,EAAOI,SAtBpBb,EA2BbwF,QAAQ,WACJ,IAAMC,EAAMzF,EAAKqB,MAAMqE,KAAKC,KAAK,KAAO3F,EAAKqB,MAAMuE,OACnDC,MAAMJ,IA7BGzF,EAgCb8F,QAAQ,SAACX,GACLA,EAAEY,kBACF/F,EAAKU,SAAS,CACVkF,OAAOT,EAAEa,cAAcC,aAnClBjG,EAuCbkG,OAAO,SAACf,GAgBJ,GAfAA,EAAEY,kBAeCZ,EAAEa,cAAcG,SAAS,GAAGtC,QAC3B7D,EAAKU,SAAS,CACVgF,KAfR,SAAgBU,GACZ,GAAKC,MAAMC,QAAQF,GAAnB,CAKA,IADA,IAAIxE,EAAM,GACD2E,EAAI,EAAGA,EAAIH,EAAInC,OAAQsC,KACC,IAAzB3E,EAAI4E,QAAQJ,EAAIG,KAChB3E,EAAI6E,KAAKL,EAAIG,IAGrB,OAAO3E,EATHE,QAAQC,IAAI,eAaP2E,CAAM,GAAAC,OAAA1G,OAAAqF,EAAA,EAAArF,CAAKD,EAAKqB,MAAMqE,MAAhB,CAAqBP,EAAEa,cAAcC,mBAFxD,CAMA,IAAIG,EAAKpG,EAAKqB,MAAMqE,KACpB1F,EAAKU,SAAS,CACVgF,KAAKU,EAAIQ,OAAO,SAAAC,GAAI,OAAEA,GAAQ1B,EAAEa,cAAcC,gBA7DlDjG,EAAKqB,MAAQ,CACTyF,MAAM,IACNvB,SAAS,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GACpDK,OAAO,GACPF,KAAK,IANA1F,wEAkEJ,IAAAoB,EACsBjB,KAAKkB,MAAxByF,EADH1F,EACG0F,MAAMvB,EADTnE,EACSmE,SACd,OACIzC,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,QAEXhC,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,OACXhC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,+GACAF,EAAAC,EAAAC,cAAA,KAAGgC,KAAK,IAAIvE,OAAO,UAAnB,4BACAqC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,OAAOpB,QAASvD,KAAK2F,SAClChD,EAAAC,EAAAC,cAAA,SAAOpC,KAAK,QAAQwC,KAAK,QAAQS,QAAmB,MAAViD,EAAejG,MAAM,IAAI0C,SAAUpD,KAAKI,eADtF,4BAIAuC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,OAAOpB,QAASvD,KAAK2F,SAClChD,EAAAC,EAAAC,cAAA,SAAOpC,KAAK,QAAQwC,KAAK,QAAQS,QAAmB,MAAViD,EAAejG,MAAM,IAAI0C,SAAUpD,KAAKI,eADtF,6DAIAuC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,OAAOpB,QAASvD,KAAK2F,SAClChD,EAAAC,EAAAC,cAAA,SAAOpC,KAAK,QAAQwC,KAAK,QAAQS,QAAmB,MAAViD,EAAejG,MAAM,IAAI0C,SAAUpD,KAAKI,eADtF,gGAORuC,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,OACXhC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,KAAGgC,KAAK,IAAIvE,OAAO,UAAnB,4BACAqC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,OAAQpB,QAASvD,KAAK+F,QACnCpD,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWxC,KAAK,WAAWiD,QAAS0B,EAAS,GAAI1E,MAAM,IAAI0C,SAAUpD,KAAKI,eAD1F,yCAIAuC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,OAAOpB,QAASvD,KAAK+F,QAClCpD,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWxC,KAAK,WAAWiD,QAAS0B,EAAS,GAAI1E,MAAM,IAAI0C,SAAUpD,KAAKI,eAD1F,8EAIAuC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,OAAOpB,QAASvD,KAAK+F,QAClCpD,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWxC,KAAK,WAAWiD,QAAS0B,EAAS,GAAI1E,MAAM,IAAI0C,SAAUpD,KAAKI,eAD1F,4GAIAuC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,OAAOpB,QAASvD,KAAK+F,QAClCpD,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWxC,KAAK,WAAWiD,QAAS0B,EAAS,GAAI1E,MAAM,IAAI0C,SAAUpD,KAAKI,eAD1F,kIAIAuC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,OAAOpB,QAASvD,KAAK+F,QAClCpD,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWxC,KAAK,WAAWiD,QAAS0B,EAAS,GAAI1E,MAAM,IAAI0C,SAAUpD,KAAKI,eAD1F,kCAIAuC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,OAAOpB,QAASvD,KAAK+F,QAClCpD,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWxC,KAAK,WAAWiD,QAAS0B,EAAS,GAAI1E,MAAM,IAAI0C,SAAUpD,KAAKI,eAD1F,4BAIAuC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,OAAOpB,QAASvD,KAAKuD,SAClCZ,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWxC,KAAK,WAAWiD,QAAS0B,EAAS,GAAI1E,MAAM,IAAI0C,SAAUpD,KAAKI,eAD1F,wCAIAuC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,OAAOpB,QAASvD,KAAK+F,QAClCpD,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWxC,KAAK,WAAWiD,QAAS0B,EAAS,GAAI1E,MAAM,IAAI0C,SAAUpD,KAAKI,eAD1F,8EAMRuC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,iLACAF,EAAAC,EAAAC,cAAA,KAAGgC,KAAK,IAAIvE,OAAO,UAAnB,4BACAqC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,KAAK1B,KAAK,SAC3BN,EAAAC,EAAAC,cAAA,UAAQ8B,UAAU,OAAOjE,MAAM,eAAK6C,QAASvD,KAAKqF,SAAlD,yBArIe7B,cCmCpBC,cA7BX,SAAAA,IAAc,IAAA5D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,IACV5D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2D,GAAAtD,KAAAH,QAMJiC,UAAY,SAAAE,GACRtC,EAAKU,SAAS,CACVqG,MAAOzE,EAAKC,YAPhBvC,EAAKqB,MAAQ,CACT0F,MAAO,YAHD/G,wEAcV,IAAIgH,EAAM,GACV,OAAQ7G,KAAKkB,MAAM0F,OACf,IAAK,WACDC,EAAMlE,EAAAC,EAAAC,cAACiE,EAAD,CAAU7E,UAAWjC,KAAKiC,YAChC,MACJ,IAAK,QACD4E,EAAMlE,EAAAC,EAAAC,cAACkE,EAAD,CAAO9E,UAAWjC,KAAKiC,YAC7B,MACJ,IAAK,OACD4E,EAAMlE,EAAAC,EAAAC,cAACmE,EAAD,MAEd,OAAOrE,EAAAC,EAAAC,cAAA,WAAMgE,UA1BDrD,aCIAyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECRNC,IAASC,OAAO5E,EAAAC,EAAAC,cAAC2E,EAAD,MAAUC,SAASC,eAAe,SDuH5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrG,KAAK,SAAAsG,GACjCA,EAAaC","file":"static/js/main.0595b292.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Input, Icon, notification, Button } from 'antd';\r\nimport Axios from \"axios\";\r\nimport './index.scss'\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.userInfo = JSON.parse(sessionStorage.getItem(\"userRegister\"));\r\n        this.state = {\r\n            username: (this.user && this.user.username) || \"\",\r\n            password: \"\"\r\n        };\r\n    }\r\n    // 改变input值\r\n    handleChange = ({ target }) => {\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n    // 提交\r\n    onSubmit = () => {\r\n        const user = {\r\n            message: '用户名不许为空',\r\n            duration: 1\r\n        };\r\n        const pass = {\r\n            message: '密码不许为空',\r\n            duration: 1\r\n        };\r\n        const nouser = {\r\n            message: '该账号不存在，请立即注册',\r\n            duration: 1\r\n        };\r\n        const usern = {\r\n            message: '用户名不对',\r\n            duration: 1\r\n        };\r\n        const passn = {\r\n            message: '密码错误',\r\n            duration: 1\r\n        };\r\n        const { username, password } = this.state;\r\n        // 1.前端验证\r\n        if (!username.trim()) {\r\n            return notification.open(user);\r\n        } else if (!password.trim()) {\r\n            return notification.open(pass);\r\n        }\r\n        // 接口\r\n        Axios.get(\"/api/register.json\", {\r\n            username,\r\n            password\r\n        }).then(res => {\r\n            const login = { username, password };\r\n            console.log(login)\r\n            const userInfo = this.userInfo;\r\n            console.log(userInfo)\r\n            if (!userInfo) {\r\n                notification.open(nouser);\r\n            } else if (userInfo.username !== login.username) {\r\n                notification.open(usern);\r\n            } else if (userInfo.password !== login.password) {\r\n                notification.open(passn);\r\n            } else {\r\n                this.props.getstatus({ ...res.data, typename: \"home\" });\r\n            }\r\n            console.log(\"提交\");\r\n        });\r\n    };\r\n    render() {\r\n        const { username, password } = this.state;\r\n        return (\r\n            <form>\r\n                <label>\r\n                    <Input\r\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"用户名\"\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <Input\r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        type=\"password\"\r\n                        value={password}\r\n                        name=\"password\"\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"密码\"\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <Button type=\"button\" onClick={this.onSubmit}>\r\n                        登陆\r\n                    </Button>\r\n                </label>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport Signin from '../signin/login'\r\nimport './register.css';\r\nimport { Icon, Input, Button, Checkbox } from 'antd';\r\nimport {  notification } from 'antd';\r\nimport axios from 'axios';\r\n\r\nclass Index extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            username:'', //用户名\r\n            password:'', //密码\r\n            repassword:'', //确认密码\r\n            treaty:false\r\n        }\r\n    }\r\n    handleChange = ({target})=>{\r\n        this.setState({\r\n            [target.name]:target.name === 'treaty' ? target.checked : target.value\r\n        })\r\n    }\r\n    verif = ()=>{\r\n        const args = {\r\n            message: '错误提示',\r\n            description:\r\n              '用户名不能为空，且长度不小于六位',\r\n            duration: 1,\r\n        };\r\n        const args1 = {\r\n            message: '错误提示',\r\n            description:\r\n              '密码不许为空，且必须是6-20个字母、数字、下划线',\r\n            duration: 1,\r\n        };\r\n        const args2 = {\r\n            message: '错误提示',\r\n            description:\r\n              '两次密码不一致，请检查密码',\r\n            duration: 1,\r\n        };\r\n        const args3 = {\r\n            message: '错误提示',\r\n            description:\r\n              '请同意协议',\r\n            duration: 1,\r\n        };\r\n        const {username,password,treaty,repassword} = this.state;\r\n        if(!username.trim() || username.length < 6){\r\n            return notification.open(args);\r\n        }else if(!password.trim() || !/^(\\w){6,20}$/.test(password)){\r\n            return notification.open(args1);\r\n        }else if(!(password === repassword)){\r\n            return notification.open(args2);\r\n        }else if(!treaty){\r\n            return notification.open(args3);\r\n        }\r\n        return true;\r\n    }\r\n    onRegister = () => {\r\n        const args = {\r\n            message: '错误提示',\r\n            description:\r\n              '用户名不能为空，且长度不小于六位',\r\n            duration: 1,\r\n        };\r\n        const args1 = {\r\n            message: '错误提示',\r\n            description:\r\n              '密码不许为空，且必须是6-20个字母、数字、下划线',\r\n            duration: 1,\r\n        };\r\n        const args4 = {\r\n            message: '提示',\r\n            description:\r\n              '注册成功',\r\n            duration: 1,\r\n        };\r\n        const args2 = {\r\n            message: '提示',\r\n            description:\r\n              '小恐龙把网吃掉了',\r\n            duration: 1,\r\n        };\r\n        if (this.verif()) {\r\n            return notification.open(args4);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // 1.前端验证，验证通过之后\r\n        const {username,password} = this.state;\r\n        if(!username.trim()){\r\n            return notification.open(args);\r\n        }else if(!password.trim()){\r\n            return notification.open(args1);\r\n        }\r\n        // 2.调用接口，接口返回的数据存到全局里面\r\n        // 凡事涉及到用户信息的，在接口中一定是用post请求\r\n        axios.get('/api/register.json',{username,password}).then((res)=>{\r\n            if(res.status === 200){\r\n                // 将账户密码存到本地，在真实的项目里不能这样做，仅适用于测试\r\n                sessionStorage.setItem('userRegister',JSON.stringify(username,password))\r\n                // 3.控制跳转到登录页面\r\n                this.props.getstatus({...res.data,typename:\"login\"})\r\n            }else{\r\n                return notification.open(args2);\r\n            }\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n        const {username,password,treaty,repassword} = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <Input type=\"text\" name=\"username\" value={username} onChange={this.handleChange} placeholder=\"用户名\" autoComplete=\"off\" prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}/>\r\n                <Input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} placeholder=\"密码\" autoComplete=\"off\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\"/>\r\n                <Input type=\"repassword\" name=\"repassword\" value={repassword} onChange={this.handleChange} placeholder=\"确认密码\" autoComplete=\"off\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"repassword\" placeholder=\"Repassword\"/>\r\n                <div className=\"login-msg\">\r\n                    {/* <Checkbox>Remember me</Checkbox>     */}\r\n                    {/* <span>\r\n                        <a onClick={this.props.click}>Log in</a>\r\n                    </span> */}\r\n                    </div>\r\n                <Button onClick={this.onRegister} type=\"button\" className=\"login-form-button\">\r\n                    Sign in\r\n                </Button>\r\n                <label>\r\n                    <input type=\"checkbox\" checked={treaty} value='checkbox' name='treaty' onChange={this.handleChange} />\r\n                    阅读隐私\r\n                    <a href=\"http://baidu.com\" target='_black'>协议</a>\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;","import React, { Component } from 'react'\r\nimport './style/index.css'\r\n\r\nexport default class child extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            radio:'1',\r\n            checkbox:[false,false,false,false,false,false,false,false],\r\n            siggle:'',\r\n            more:[]\r\n        }\r\n    };\r\n    handleSubmit = e => {\r\n        const { target } = e\r\n        e.preventDefault()\r\n    }\r\n    handleChange = ({target}) => {\r\n        if(target.name === 'checkbox'){\r\n            const newCheckbox = [...this.state.checkbox];\r\n            newCheckbox[target.value] = target.checked;\r\n            this.setState({\r\n                [target.name]:newCheckbox\r\n            })\r\n        }else{\r\n            this.setState({\r\n                [target.name]:target.value\r\n            });\r\n        }\r\n    }\r\n    // 提交\r\n    clicked=()=>{\r\n        const str = this.state.more.join(' ') + this.state.siggle\r\n        alert(str)\r\n    }\r\n    // 放单选\r\n    onSigle=(e)=>{\r\n        e.stopPropagation()\r\n        this.setState({\r\n            siggle:e.currentTarget.innerText\r\n        })\r\n    }\r\n    // 放多选\r\n    onMore=(e)=>{\r\n        e.stopPropagation()\r\n        // 去重函数\r\n        function unique(arr) {\r\n            if (!Array.isArray(arr)) {\r\n                console.log('type error!')\r\n                return\r\n            }\r\n            let res = []\r\n            for (let i = 0; i < arr.length; i++) {\r\n                if (res.indexOf(arr[i]) === -1) {\r\n                    res.push(arr[i])\r\n                }\r\n            }\r\n            return res\r\n        }\r\n        if(e.currentTarget.children[0].checked){\r\n            this.setState({\r\n                more:unique([...this.state.more,e.currentTarget.innerText])\r\n            })\r\n            return\r\n        }\r\n        let arr =this.state.more\r\n        this.setState({\r\n            more:arr.filter(item=>item != e.currentTarget.innerText)\r\n        })\r\n    }\r\n    render() {\r\n        const { radio,checkbox } = this.state;\r\n        return (\r\n            <div className='quan'>\r\n                {/* 单选 */}\r\n                <div className='dan'>\r\n                    <form>\r\n                        <b>1.你对互联网的未来发展有什么看发？</b>\r\n                        <a href=\"/\" target='_black'>【单选】</a>\r\n                        <label className='dan1' onClick={this.onSigle}>\r\n                            <input name='radio' type=\"radio\" checked={radio === '0'} value='0' onChange={this.handleChange} />\r\n                            没有看法\r\n                        </label>\r\n                        <label className='dan2' onClick={this.onSigle}>\r\n                            <input name='radio' type=\"radio\" checked={radio === '1'} value='1' onChange={this.handleChange} />\r\n                            我认为996应该尽早废弃\r\n                        </label>\r\n                        <label className='dan3' onClick={this.onSigle}>\r\n                            <input name='radio' type=\"radio\" checked={radio === '2'} value='2' onChange={this.handleChange} />\r\n                            互联网未来会成为主导世界的枢纽\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n                {/* 多选 */}\r\n                <div className='duo'>\r\n                    <form>\r\n                        <b>2.你有哪些爱好？</b>\r\n                        <a href=\"/\" target='_black'>【多选】</a>\r\n                        <label className='duo1'  onClick={this.onMore}>\r\n                            <input type=\"checkbox\" name='checkbox' checked={checkbox[0]} value='0' onChange={this.handleChange} />\r\n                            一天吃5次主食\r\n                        </label>\r\n                        <label className='duo2' onClick={this.onMore}>\r\n                            <input type=\"checkbox\" name='checkbox' checked={checkbox[1]} value='1' onChange={this.handleChange} />\r\n                            不光吃5次主食还要喝8杯可乐\r\n                        </label>\r\n                        <label className='duo3' onClick={this.onMore}>\r\n                            <input type=\"checkbox\" name='checkbox' checked={checkbox[2]} value='2' onChange={this.handleChange} />\r\n                            除了5次主食8杯可乐还要吃半斤多的零食\r\n                        </label>\r\n                        <label className='duo4' onClick={this.onMore}>\r\n                            <input type=\"checkbox\" name='checkbox' checked={checkbox[3]} value='3' onChange={this.handleChange} />\r\n                            吃完上面的食物，打开朋友圈发一条减肥的口号\r\n                        </label>\r\n                        <label className='duo5' onClick={this.onMore}>\r\n                            <input type=\"checkbox\" name='checkbox' checked={checkbox[4]} value='4' onChange={this.handleChange} />\r\n                            素食主义者\r\n                        </label>\r\n                        <label className='duo6' onClick={this.onMore}>\r\n                            <input type=\"checkbox\" name='checkbox' checked={checkbox[5]} value='5' onChange={this.handleChange} />\r\n                            热爱运动\r\n                        </label>\r\n                        <label className='duo7' onClick={this.onClick}>\r\n                            <input type=\"checkbox\" name='checkbox' checked={checkbox[6]} value='6' onChange={this.handleChange} />\r\n                            喜欢古典音乐\r\n                        </label>\r\n                        <label className='duo8' onClick={this.onMore}>\r\n                            <input type=\"checkbox\" name='checkbox' checked={checkbox[7]} value='7' onChange={this.handleChange} />\r\n                            喜欢看书，偶尔也写点东西\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n                <label>\r\n                    <b>3.你认为当代年轻人应该持有怎么样的世界观、人生观、价值观</b>\r\n                    <a href=\"/\" target='_black'>【问答】</a>\r\n                    <input className='ti' type=\"text\" />\r\n                    <button className='jiao' value=\"按钮\" onClick={this.clicked}>提交</button>\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import \"./style/index.scss\";\r\n// 注册\r\nimport Register from \"./routing-jump/register/register\";\r\n// 登陆\r\nimport Login from \"./routing-jump/signin/login\";\r\n// 首页\r\nimport Home from \"./routing-jump/home/index\";\r\nclass Index extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isDom: \"register\"\r\n        };\r\n    }\r\n    // 获取组件的返回状态\r\n    getstatus = data => {\r\n        this.setState({\r\n            isDom: data.typename\r\n        });\r\n    };\r\n    // 渲染函数\r\n    render() {\r\n        let Dom = \"\";\r\n        switch (this.state.isDom) {\r\n            case \"register\":\r\n                Dom = <Register getstatus={this.getstatus} />;\r\n                break;\r\n            case \"login\":\r\n                Dom = <Login getstatus={this.getstatus} />;\r\n                break;\r\n            case \"home\":\r\n                Dom = <Home />;\r\n        }\r\n        return <div>{Dom}</div>;\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// import Home from './index.jsx';\r\nimport Home from './home.jsx';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(<Home />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}