{
    "cass": {
        "one": {
            "title": "cass的使用于scss",
            "content": "SASS是一种CSS的开发工具，提供了许多便利的写法，大大节省了设计者的时间，使得CSS的开发，变得简单和可维护。SASS文件就是普通的文本文件，里面可以直接使用CSS语法。文件后缀名是.scss，意思为Sassy CSS。"
        },
        "two": {
            "title": "css.module",
            "content": "CSS Modules 能最大化地结合现有 CSS 生态和 JS 模块化能力，API 简洁到几乎零学习成本。发布时依旧编译出单独的 JS 和 CSS。它并不依赖于 React，只要你使用 Webpack，可以在 Vue/Angular/jQuery 中使用。"
        }
    },
    "props": {
        "one": {
            "title": "使用属性props怎么控制组件的显示内容,点组件的使用",
            "content": " props：是react组件的输入，他们是从父组件向下传递给子组件的数据，并且子组件无法修改，就像是父亲遗传给儿子的基因，儿子无法修改的属性",
            "contentone": "props.children是一个集合，它存储的是在标签中传入的子元素，概念就像是vue中的插槽。在无状态组件中可以直接props.children使用，在class组件中要加this.props.children"
        },
        "two": {
            "title": "点组件的使用",
            "content": "函数式组件（ 无状态组件 PureComponent）由于元素没有办法传递参数，所以我们就需要把之前定义的变量改为一个方法，让这个方法去return一个元素:",
            "contentone": "class组件ES6的加入让JavaScript直接支持使用class来定义一个类，react的第二种创建组件的方式就是使用的类的继承，ES6 class是目前官方推荐的使用方式，它使用了ES6标准语法来构建."
        }
    },
    "smzq": {
        "one": {
            "title": "生命周期和状态以及属性的配合使用,每个钩子函数都是做什么功能的",
            "content": "props属性:1.1：定义：父组件传递给子组件的数据就叫属性,1.2：props只能由父组件去修改，子组件是无法修改父级传递进来的属性,1.3：props更新后也会触发子组件的更新阶段",
            "contentone": "state状态：2.1：定义：组件自由的状态，用来存数据的，它可以被组件自己修改,2.2：修改state使用this.setState方法，该方法接受一个对象，setState会在内部将新的值和state旧的值进行合并,2.3：state一旦被修改就会触发组件更新阶段"
        },
        "two": {
            "title": "每个钩子函数都是做什么功能的",
            "content": "1.1挂载阶段：constructor【初始挂载】、render【渲染呈现】、componentDidMount【挂载完成】1.2更新阶段：render【渲染】、componentDidUpdate【更新完成】1.3卸载阶段：componentWillUnmount【准备卸载】"
        }
    },
    "events": {
        "one": {
            "title": "事件写法",
            "content": "react中采用on+事件名的方式来绑定一个事件，注意，这里和原生的事件是有区别的，原生的事件全是小写onclick, React里的事件是驼峰onClick，React的事件并不是原生事件，而是合成事件。",
            "contentone": "1.直接在render里写行内的箭头函数(不推荐)2.在组件内使用箭头函数定义一个方法(最推荐)3.直接在组件内定义一个非箭头函数的方法，然后在render里直接使用：onClick={this.handleClick.bind(this)}(不推荐)4.直接在组件内定义一个非箭头函数的方法，然后在constructor里bind(this)(推荐)"
        },
        "two": {
            "title": "跨域的使用",
            "content": "通过proxy解决跨域问题，可以直接在package.json下配置",
            "contentone": "打包后上传到同域名路径就ok了，不需要设置webpack代理的，这时候我们在打包的时候就需要在package.json配置中关闭刚才设置的proxy"
        }
    },
    "jsconfig": {
        "one": {
            "title": "jsconfig.json",
            "content": "目录中存在jsconfig.json文件表示该目录是JavaScript项目的根目录。jsconfig.json文件指定根文件和JavaScript语言服务提供的功能选项。",
            "contentone": "jsconfig.json源于tsconfig.json，是TypeScript的配置文件。jsconfig.json相当于tsconfig.json的“allowJs”属性设置为true。"
        }
    },
    "antd": {
        "one": {
            "title": "了解antd框架",
            "content": "服务于企业级产品的设计体系，基于确定和自然的设计价值观上的模块化解决方案，让设计者和开发者专注于更好的用户体验。antd 是基于 Ant Design 设计体系的 React UI 组件库，主要用于研发企业级中后台产品。",
            "contentone": "提炼自企业级中后台产品的交互语言和视觉风格。开箱即用的高质量 React 组件。使用 TypeScript 构建，提供完整的类型定义文件。全链路开发和设计工具体系。支持环境#现代浏览器和 IE9 及以上（需要 polyfills）。支持服务端渲染。Electron使用antd前要先安装npm install antd --save"
        }
    }
}